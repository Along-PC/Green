apply plugin: 'com.android.application'
apply plugin: 'com.antfortune.freeline'

/**
 * 在项目根路径下创建一个文件key.properties
 */
def keystorePropertiesFile = rootProject.file('key.properties')
//创建一个properties对象
def keystoreProperties = new Properties()
//加载key.properties里面的内容
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 26

    defaultConfig {
        applicationId "com.example.along"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //版本名后面添加一句话，意思就是flavor dimension 它的维度就是该版本号，这样维度就是都是统一的了
        // ---android studio 3.0之后需要
        flavorDimensions "1.0"
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile']) //签名文件
            storePassword keystoreProperties['storePassword']  //签名文件密码
            keyAlias keystoreProperties['keyAlias']       //签名文件别名
            keyPassword keystoreProperties['keyPassword']     //别名密码
        }

        debug {

        }
    }

    buildTypes {
        debug {
            //脚本构建时网址进行切换
            buildConfigField('String', 'WS_REALM_NAME', '"ws://api.mmednet.com/app"')

            zipAlignEnabled true //Zipalign优化
            shrinkResources false // 移除无用的resource文件
            minifyEnabled false //是否开启混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug//在此调用签名方法
        }

        release {
            //脚本构建时网址进行切换
            buildConfigField('String', 'WS_REALM_NAME', '"ws://api.mmednet.com/app"')

            zipAlignEnabled true //Zipalign优化
            shrinkResources false // 移除无用的resource文件
            minifyEnabled false //是否开启混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release//在此调用签名方法
        }

        //设置包名
        applicationVariants.all { variant ->
            def buildType = variant.buildType.name
            //android studio3.0之前命名
//            variant.outputs.each { output ->
//                def outputFile = output.outputFile
//                if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                    //应用名+版本号+渠道名+构建类型+时间戳${variant.flavorName}
//                    def fileName = "green_v${defaultConfig.versionName}_${variant.flavorName}_${releaseTime()}_${buildType}.apk"
//                    //APK输出到默认目录
//                    output.outputFile = new File(outputFile.parent, fileName)
//
//                }
//            }
            //android studio3.0之后命名
            variant.outputs.all {
                outputFileName = "green_v${defaultConfig.versionName}_${variant.flavorName}_${releaseTime()}_${buildType}.apk"
            }
        }
    }

    productFlavors {//多渠道打包
        //命名规则和java一样，不能数字打头，不能纯数字
        zhushou360 {}
        xiaomi {}
    }

    productFlavors.all { flavor ->
        //为manifest中meta-data的占位符进行赋值
        flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
    }

    freeline {
        productFlavor = "xiaomi"
    }

}

//发布时间
def releaseTime() {
    //设置发布时间的时候不要设置小时，这样的话每个小时生成的包都不一样，在安装时studio会报找不见apk的异常
//    return new Date().format('MMddHH', TimeZone.getTimeZone('GMT+8'))
    return new Date().format('MMdd', TimeZone.getTimeZone('GMT+8'))
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    //日志打印工具
    implementation 'com.orhanobut:logger:2.1.1'
    //网络请求工具
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    //网络请求拦截器
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    //json解析
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation project(':blue')
    implementation project(':red')
}
